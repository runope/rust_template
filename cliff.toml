# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file. See [conventional commits](https://www.conventionalcommits.org/) for commit guidelines.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
---
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]($REPO/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - **({{commit.scope}})**{% if commit.breaking %} [**breaking**]{% endif %} \
            {{ commit.message|trim }} - ([{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})) - {{ commit.author.name }}
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - {% if commit.breaking %} [**breaking**]{% endif %}\
                {{ commit.message|trim }} - ([{{ commit.id | truncate(length=7, end="") }}]($REPO/commit/{{ commit.id }})) - {{ commit.author.name }} - {{ commit.author.timestamp | date(format="%Y-%m-%d %H:%M") }}
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true
# postprocessors
postprocessors = [
    { pattern = '\$REPO', replace = "https://github.com/runope/rust_template" }, # TODO replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/orhun/git-cliff/issues/${2}))"}, # replace issue numbers
]
# regex for parsing and grouping commits
# 提交信息的解析和分组规则
commit_parsers = [
    { message = "^feat", group = "🚀 新功能" },
    { message = "^fix", group = "🐛 Bug 修复" },
    { message = "^docs", group = "📚 文档更新" },
    { message = "^style", group = "🎨 代码样式" },
    { message = "^refactor", group = "🚜 代码重构" },
    { message = "^perf", group = "⚡ 性能优化" },
    { message = "^test", group = "🧪 测试相关" },
    { message = "^build", group = "📦 构建系统" },
    { message = "^ci", group = "🔧 CI 配置" },
    { message = "^chore", group = "⚙️ 杂项任务" },
    { message = "^revert", group = "◀️ 回滚变更" },
    { message = "^security", group = "🛡️ 安全相关" },
    { message = "^wip", group = "🚧 进行中" },
    { message = "^deps", group = "📦 依赖更新" },
    { message = "^init", group = "🎉 初始化" },
    { message = "^config", group = "⚙️ 配置变更" },
    { message = "^release", group = "🏷️ 版本发布" },
    { message = "^hotfix", group = "🔥 紧急修复" },
    { message = "^breaking", group = "💥 破坏性变更" },
    { message = ".*", group = "💼 其他" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# regex for matching git tags
tag_pattern = "v[0-9].*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# limit the number of commits included in the changelog.
# limit_commits = 42
